in
brace_list
==
left_assignment
'
comment
:=
*
subset2
arguments
i
%
<-
NA_complex_
formal_parameters
;
<<-
{
identifier
>=
namespace_get
^
,
->
]]
integer
if
null
[
]
-
program
[[
super_assignment
>
<
dollar
||
unary
$
`
|
}
false
=
"
NA_integer_
)
slot
::
+
@
right_assignment
switch
true
NA_real_
&
call
&&
NA_character_
binary
function
string
next
complex
paren_list
/
na
!=
else
:
for
float
~
<=
(
escape_sequence
repeat
inf
while
NA
subset
left_assignment2
special
nan
break
dots
equals_assignment
function_definition
namespace_get_internal
!
:::
