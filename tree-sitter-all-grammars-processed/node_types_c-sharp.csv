range_expression
indexer_declaration
struct
finally_clause
with_initializer_expression
|=
simple_assignment_expression
params
alias_qualified_name
--
switch_statement
unmanaged
constructor_declaration
??=
interface_declaration
notnull
default_expression
discard
default_switch_label
implicit_stack_alloc_array_creation_expression
unsafe_statement
new
type_parameter_constraint
verbatim_string_literal
type_constraint
{{
tuple_type
local_declaration_statement
parenthesized_expression
not
initializer_expression
init
arrow_expression_clause
ascending
in
fixed
dynamic
default
prefix_unary_expression
equals_value_clause
override
do_statement
yield_statement
$"
constant_pattern
member_access_expression
(
^
equals
where_clause
pointer_type
explicit_interface_specifier
member_binding_expression
predefined_type
orderby
extern
=>
for
delegate_declaration
accessor_declaration
[
-=
interpolation_alignment_clause
class
false
_expression
await
::
escape_sequence
subpattern
is_pattern_expression
bracketed_argument_list
yield
<<=
??
)
interface
checked_expression
on
try_statement
from
select_clause
?
remove
switch
global
parameter_list
accessor_list
function_pointer_unmanaged_calling_convention_list
argument
conversion_operator_declaration
ref_type_expression
object_creation_expression
local_function_statement
method
assembly
query_expression
attribute_target_specifier
as
let_clause
order_by_clause
preprocessor_call
parameter_modifier
element_access_expression
interpolation
unchecked
type_parameter_list
from_clause
var_pattern
label_name
operator
variable_declarator
record_declaration
assignment_operator
tuple_pattern
field_declaration
variable_declaration
volatile
tuple_element
destructor_declaration
recursive_pattern
empty_statement
delegate
enum_member_declaration
>>=
let
conditional_expression
out
class_declaration
<=
for_statement
global_statement
__makeref
event
await_expression
array_creation_expression
field
group_clause
*
abstract
real_literal
join_into_clause
while
&&
null_literal
with
base
%
preprocessor_directive
where
"
for_each_statement
if
sizeof
+
name_equals
parenthesized_pattern
type_argument_list
tuple_expression
when
constructor_initializer
and
>>
else
]
array_type
declaration_list
if_statement
Fastcall
do
^=
public
__reftype
argument_list
postfix_unary_expression
select
query_continuation
checked
when_clause
..
namespace_declaration
enum_declaration
labeled_statement
++
var
>
anonymous_object_creation_expression
-
break
base_expression
declaration_pattern
_statement
namespace
switch_body
property_pattern_clause
switch_expression_arm
using
this_expression
managed
static
alias
Stdcall
make_ref_expression
binary_expression
unsafe
!=
<<
is
continue
try
!
lambda_expression
function_pointer_calling_convention
stack_alloc_array_creation_expression
throw
explicit
group
lock_statement
->
nullable_type
constructor_constraint
block
<
throw_statement
enum
function_pointer_unmanaged_calling_convention
ref_expression
~
qualified_name
with_expression
=
continue_statement
catch_filter_clause
$@"
/
character_literal
while_statement
relational_pattern
array_rank_specifier
operator_declaration
throw_expression
catch_declaration
invocation_expression
module
implicit_array_creation_expression
descending
internal
interpolated_string_expression
ref_value_expression
private
attribute_argument
event_field_declaration
expression_statement
*=
partial
readonly
goto
identifier
@$"
type_of_expression
type_pattern
function_pointer_parameter
into
""
stackalloc
sealed
>=
param
primary_constructor_base_type
type_parameter
/=
integer_literal
parameter_array
compilation_unit
generic_name
string_literal
bracketed_parameter_list
fixed_statement
size_of_expression
interpolated_verbatim_string_text
&=
property
function_pointer_type
property_declaration
using_statement
switch_expression
type
ref
catch_clause
extern_alias_directive
implicit
;
boolean_literal
_declaration
struct_declaration
finally
enum_member_declaration_list
.
by
or
||
+=
protected
implicit_type
comment
interpolation_format_clause
attribute_list
{
|
return_statement
parameter
:
add
base_list
implicit_object_creation_expression
void_keyword
get
event_declaration
assignment_expression
this
%=
checked_statement
negated_pattern
positional_pattern_clause
switch_section
parenthesized_variable_designation
declaration_expression
attribute_argument_list
cast_expression
case
using_directive
name_colon
case_switch_label
Cdecl
lock
set
modifier
element_binding_expression
anonymous_method_expression
const
interpolated_string_text
_type
typeof
join
nameof
goto_statement
,
attribute
method_declaration
true
async
case_pattern_switch_label
break_statement
==
global_attribute_list
virtual
return
conditional_access_expression
&
'
Thiscall
catch
foreach
record
join_clause
type_parameter_constraints_clause
binary_pattern
__refvalue
}
