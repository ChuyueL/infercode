>=
and
local
_VERSION
number
]
for_in_statement
~
return
:
condition_expression
%
>
_G
&
function_name
variable_declarator
break_statement
goto_statement
::
method
)
string
parameters
nil
elseif
+
for_statement
do
do_statement
property_identifier
goto
//
.
=
until
if
for
/
..
false
#
self
~=
table
;
field_expression
^
}
>>
while_statement
|
label_statement
true
repeat
arguments
<
<<
next
<=
local_variable_declaration
,
return_statement
else
repeat_statement
not
identifier
function
spread
program
loop_expression
end
*
unary_operation
then
variable_declaration
[
comment
in
(
{
==
local_function
while
function_call
binary_operation
-
field
if_statement
global_variable
or
function_name_field
expression
function_definition
