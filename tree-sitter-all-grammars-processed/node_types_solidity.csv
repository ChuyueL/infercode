yul_break
fallback
int104
struct
szabo
|=
yul_evm_builtin
function_definition
--
create2
timestamp
selfdestruct
interface_declaration
int48
returns
uint168
bytes19
bytes21
wei
int192
new
bytes7
parenthesized_expression
not
bytes4
fixed
bytes27
default
slice_access
constant_variable_declaration
bytes10
chainid
uint16
log1
!==
primitive_type
override
bytes29
library
(
^
callvalue
days
msize
int128
>>>
uint80
keccak256
int152
=>
yul_continue
for
unary_expression
yul_if_statement
[
delegatecall
uint32
-=
finney
int56
false
import_directive
blockhash
int208
pop
<<=
bytes6
constructor_definition
)
extcodesize
interface
bool
unicode_string_literal
yul_for_statement
pragma
try_statement
minutes
from
?
smod
sgt
switch
mstore
bytes28
memory
sload
int64
int256
int24
int240
assembly
bytes17
as
payable
uint152
yul_function_call
eq
gas
exp
uint232
number_literal
state_variable_declaration
yul_switch_statement
variable_declaration_statement
int40
bytes18
variable_declaration
difficulty
bytes12
bytes24
div
inheritance_specifier
>>=
returndatasize
variable_declaration_tuple
seconds
let
delete
bytes15
bytes1
import
view
revert
event_definition
<=
modifier_invocation
pure
for_statement
xor
bytes11
event
int16
balance
yul_function_definition
calldataload
calldata
*
ternary_expression
abstract
bytes16
log4
returndatacopy
int120
uint144
sub
while
&&
yul_identifier
uint104
%
slt
origin
ufixed
"
caller
if
+
event_paramater
yul_path
number_unit
tuple_expression
**
do_while_statement
and
bytes9
gt
gaslimit
>>
else
sdiv
constant
uint216
fallback_receive_definition
]
sar
if_statement
struct_expression
do
^=
bytes8
public
uint56
bytes13
uint
member_expression
int32
uint120
uint96
bytes5
enum_declaration
bytes14
uint200
++
mstore8
yul_hex_number
var
>
int80
_
augmented_assignment_expression
payable_conversion_expression
address
"evmasm"
-
break
bytes22
enum_value
uint8
receive
gasprice
shr
meta_type_expression
mapping
using
yul_leave
uint48
int144
emit
int160
binary_expression
!=
int
<<
is
bytes30
continue
!
bytes
staticcall
stop
try
addmod
int8
sstore
int72
uint160
visibility
uint192
property_identifier
->
storage
int184
<
uint24
mload
selfbalance
uint240
mulmod
enum
function_body
uint176
yul_decimal_number
yul_variable_declaration
~
extcodecopy
type_name
uint208
contract_body
=
continue_statement
struct_member
uint136
yul_assignment
function
uint64
coinbase
/
while_statement
log3
update_expression
int168
uint128
call
uint224
internal
new_expression
private
emit_statement
callcode
calldatasize
hex
pragma_directive
expression_statement
*=
identifier
uint40
int200
hours
>=
create
weeks
/=
string_literal
bytes20
source_file
lt
indexed
library_declaration
&=
any_source_type
iszero
uint256
unicode
signextend
constructor
type
immutable
catch_clause
boolean_literal
string
struct_declaration
.
bytes32
or
||
int96
bytes31
hex_string_literal
int112
+=
mul
assembly_statement
contract_declaration
comment
block_statement
array_access
{
contract
|
bytes25
bytes23
return_statement
parameter
:
add
inline_array_expression
bytes3
yul_block
call_expression
byte
assignment_expression
calldatacopy
int176
int232
:=
shl
%=
int216
type_cast_expression
uint248
uint72
bytes26
case
using_directive
extcodehash
anonymous
modifier
>>>=
log2
mod
log0
ether
years
yul_string_literal
,
bytes2
uint112
gwei
type_alias
int248
solidity
true
break_statement
uint88
==
yul_boolean
virtual
int224
modifier_definition
return
state_mutability
&
int136
'
override_specifier
return_type_definition
catch
int88
invalid
number
external
uint184
}
