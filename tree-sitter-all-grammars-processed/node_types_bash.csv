>=
local
]
>&
:
%
ternary_expression
>
${
&
|&
;;&
concatenation
<(
>(
pipeline
subshell
)
_statement
string
heredoc_body
=~
unset
((
:-
?
readonly
+
for_statement
file_redirect
do
:?
<<<
>|
c_style_for_statement
redirected_statement
special_variable_name
=
if
for
/
list
command_substitution
expansion
#
simple_expansion
string_expansion
[[
;
heredoc_start
variable_assignment
elif_clause
}
>>
while_statement
<<-
|
<
<<
<=
_expression
||
]]
esac
else
variable_name
heredoc_redirect
negated_command
declaration_command
export
function
parenthesized_expression
program
subscript
!=
"
-=
else_clause
+=
--
&>
$(
!
command
word
typeset
test_operator
do_group
herestring_redirect
done
binary_expression
;;
unset_command
raw_string
declare
unary_expression
then
process_substitution
[
in
array
(
case
==
{
_primary_expression
compound_statement
while
fi
))
regex
elif
case_statement
&&
test_command
$
-
if_statement
ansii_c_string
file_descriptor
unsetenv
command_name
++
case_item
&>>
<&
`
;&
postfix_expression
function_definition
