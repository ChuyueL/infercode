_primary_expression
redirected_statement
c_style_for_statement
-
fi
do_group
;
case_statement
done
_statement
ansii_c_string
string
|&
function_definition
--
<(
]]
command_name
||
else_clause
+=
string_expansion
then
<<<
expansion
local
binary_expression
file_redirect
!=
process_substitution
<<
{
!
typeset
array
|
>&
:-
:
:?
parenthesized_expression
))
case_item
$
unset
<=
regex
command_substitution
for_statement
in
<
heredoc_start
unset_command
;&
word
>(
ternary_expression
$(
raw_string
elif
test_operator
subshell
file_descriptor
=
while
&&
compound_statement
(
function
list
/
%
while_statement
heredoc_body
concatenation
command
program
&>
case
"
if
`
;;
for
#
+
negated_command
unary_expression
esac
[
postfix_expression
-=
variable_assignment
_expression
((
<&
readonly
herestring_redirect
elif_clause
&>>
<<-
=~
)
>>
else
variable_name
pipeline
${
declare
]
simple_expansion
>=
subscript
if_statement
?
==
do
[[
heredoc_redirect
;;&
export
special_variable_name
>|
&
unsetenv
test_command
declaration_command
++
}
>
